<workflows>
  <convergence_wsm
    type                    = "bash"
    builds                  = "builds/convergence_wsm.xml"
    benchmarks              = "benchmarks/convergence_wsm.xml"
    output_location         = "convergence_wsm.sh"
    resource_management     = "slurm"
    mesh_regular_expression = "cube_CUBES_PER_DIM_TAG_CUBES_PER_DIM_TAG_CUBES_PER_DIM_TAG_1_1_1"
  />

  <convergence_single_node_avx_sse3
    type                    = "bash"
    builds                  = "builds/convergence_single_node_sse3_avx.xml"
    benchmarks              = "benchmarks/convergence_single_node_sse3_avx.xml"
    output_location         = "convergence_single_node_sse3_avx.sh"
    resource_management     = "slurm"
    mesh_regular_expression = "cube_CUBES_PER_DIM_TAG_CUBES_PER_DIM_TAG_CUBES_PER_DIM_TAG_1_1_1"
  />

  <convergence_single_card_knc
    type                    = "bash"
    builds                  = "builds/convergence_knc.xml"
    benchmarks              = "benchmarks/convergence_single_card_knc.xml"
    output_location         = "convergence_single_card_knc.sh"
    resource_management     = "slurm"
    mesh_regular_expression = "cube_CUBES_PER_DIM_TAG_CUBES_PER_DIM_TAG_CUBES_PER_DIM_TAG_1_1_1"
  />

  <convergence_multi_node_avx_sse3
    type                    = "bash"
    builds                  = "builds/convergence_multi_node_sse3_avx.xml"
    benchmarks              = "benchmarks/convergence_multi_node_sse3_avx.xml"
    output_location         = "convergence_multi_node_sse3_avx.sh"
    resource_management     = "slurm"
  />

  <convergence_multi_card_knc
    type                    = "bash"
    builds                  = "builds/convergence_knc.xml"
    benchmarks              = "benchmarks/convergence_multi_card_knc.xml"
    output_location         = "convergence_multi_card_knc.sh"
    resource_management     = "slurm"
  />

  <wave_propagation_mixed
    type                = "bash"
    builds              = "builds/wave_propagation_mixed.xml"
    benchmarks          = "benchmarks/wave_propagation_mpi.xml"
    output_location     = "wave_propagation_mixed.sh"
    resource_management = "slurm"
  />

  <wave_propagation_mpi
    type                = "bash"
    builds              = "builds/wave_propagation_mpi.xml"
    benchmarks          = "benchmarks/wave_propagation_mpi.xml"
    output_location     = "wave_propagation_mpi.sh"
    resource_management = "slurm"
  />

  <wave_propagation_hybrid
    type                = "bash"
    builds              = "builds/wave_propagation_hybrid.xml"
    benchmarks          = "benchmarks/wave_propagation_hybrid.xml"
    output_location     = "wave_propagation_hybrid.sh"
    resource_management = "slurm"
  />

  <wave_propagation_knc
    type                = "bash"
    builds              = "builds/wave_propagation_knc.xml"
    benchmarks          = "benchmarks/wave_propagation_knc.xml"
    output_location     = "wave_propagation_knc.sh"
    resource_management = "slurm"
  />

  <dynamic_rupture_mixed
    type                = "bash"
    builds              = "builds/dynamic_rupture_mixed.xml"
    benchmarks          = "benchmarks/dynamic_rupture_mpi.xml"
    output_location     = "dynamic_rupture_mixed.sh"
    resource_management = "slurm"
  />

  <dynamic_rupture_mpi
    type                = "bash"
    builds              = "builds/dynamic_rupture_mpi.xml"
    benchmarks          = "benchmarks/dynamic_rupture_mpi.xml"
    output_location     = "dynamic_rupture_mpi.sh"
    resource_management = "slurm"
  />

  <dynamic_rupture_hybrid
    type                = "bash"
    builds              = "builds/dynamic_rupture_hybrid.xml"
    benchmarks          = "benchmarks/dynamic_rupture_hybrid.xml"
    output_location     = "dynamic_rupture_hybrid.sh"
    resource_management = "slurm"
  />

  <dynamic_rupture_knc
    type                = "bash"
    builds              = "builds/dynamic_rupture_knc.xml"
    benchmarks          = "benchmarks/dynamic_rupture_knc.xml"
    output_location     = "dynamic_rupture_knc.sh"
    resource_management = "slurm"
  />
</workflows>
